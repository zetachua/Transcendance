{"ast":null,"code":"const initClient = () => {\n  setIsLoadingGoogleDriveApi(true);\n  gapi.client.init({\n    apiKey: \"AIzaSyAWL6k1EUIDYg9gXW_-1I8AmIqW8Jun5ew\",\n    clientId: \"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\",\n    discoveryDocs: \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\n    scope: 'https://www.googleapis.com/auth/drive.metadata.readonly'\n  }).then(function () {\n    // Listen for sign-in state changes.\n    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    // Handle the initial sign-in state.\n    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n  }, function (error) {});\n};\nconst updateSigninStatus = isSignedIn => {\n  if (isSignedIn) {\n    // Set the signed in user\n    setSignedInUser(gapi.auth2.getAuthInstance().currentUser.je.Qt);\n    setIsLoadingGoogleDriveApi(false);\n    // list files if user is authenticated\n    listFiles();\n  } else {\n    // prompt user to sign in\n    handleAuthClick();\n  }\n};\n\n/**\n* List files.\n*/\nconst listFiles = function () {\n  let searchTerm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  setIsFetchingGoogleDriveFiles(true);\n  gapi.client.drive.files.list({\n    pageSize: 10,\n    fields: 'nextPageToken, files(id, name, mimeType, modifiedTime)',\n    q: searchTerm\n  }).then(function (response) {\n    setIsFetchingGoogleDriveFiles(false);\n    setListDocumentsVisibility(true);\n    const res = JSON.parse(response.body);\n    setDocuments(res.files);\n  });\n};\n\n/**\n *  Sign in the user upon button click.\n */\nconst handleAuthClick = event => {\n  gapi.auth2.getAuthInstance().signIn();\n};","map":{"version":3,"names":["initClient","setIsLoadingGoogleDriveApi","gapi","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","error","setSignedInUser","currentUser","je","Qt","listFiles","handleAuthClick","searchTerm","setIsFetchingGoogleDriveFiles","drive","files","list","pageSize","fields","q","response","setListDocumentsVisibility","res","JSON","parse","body","setDocuments","event","signIn"],"sources":["/Users/zetachua/Documents/GitHub/Transcendance/transcendance/src/GoogleDrive2.js"],"sourcesContent":["const initClient = () => {\n    setIsLoadingGoogleDriveApi(true);\n    gapi.client\n      .init({\n        apiKey: \"AIzaSyAWL6k1EUIDYg9gXW_-1I8AmIqW8Jun5ew\",\n        clientId:\"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\",\n        discoveryDocs: \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\n        scope: 'https://www.googleapis.com/auth/drive.metadata.readonly',\n      })\n      .then(\n        function () {\n          // Listen for sign-in state changes.\n          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        },\n        function (error) {}\n      );\n  };\n\n  const updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      // Set the signed in user\n      setSignedInUser(gapi.auth2.getAuthInstance().currentUser.je.Qt);\n      setIsLoadingGoogleDriveApi(false);\n      // list files if user is authenticated\n      listFiles();\n    } else {\n      // prompt user to sign in\n      handleAuthClick();\n    }\n  };\n  \n   /**\n   * List files.\n   */\n  const listFiles = (searchTerm = null) => {\n    setIsFetchingGoogleDriveFiles(true);\n    gapi.client.drive.files\n      .list({\n        pageSize: 10,\n        fields: 'nextPageToken, files(id, name, mimeType, modifiedTime)',\n        q: searchTerm,\n      })\n      .then(function (response) {\n        setIsFetchingGoogleDriveFiles(false);\n        setListDocumentsVisibility(true);\n        const res = JSON.parse(response.body);\n        setDocuments(res.files);\n      });\n  };\n\n  /**\n   *  Sign in the user upon button click.\n   */\n  const handleAuthClick = (event) => {\n    gapi.auth2.getAuthInstance().signIn();\n  };"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAM;EACrBC,0BAA0B,CAAC,IAAI,CAAC;EAChCC,IAAI,CAACC,MAAM,CACRC,IAAI,CAAC;IACJC,MAAM,EAAE,yCAAyC;IACjDC,QAAQ,EAAC,qCAAqC;IAC9CC,aAAa,EAAE,4DAA4D;IAC3EC,KAAK,EAAE;EACT,CAAC,CAAC,CACDC,IAAI,CACH,YAAY;IACV;IACAP,IAAI,CAACQ,KAAK,CAACC,eAAe,EAAE,CAACC,UAAU,CAACC,MAAM,CAACC,kBAAkB,CAAC;;IAElE;IACAA,kBAAkB,CAACZ,IAAI,CAACQ,KAAK,CAACC,eAAe,EAAE,CAACC,UAAU,CAACG,GAAG,EAAE,CAAC;EACnE,CAAC,EACD,UAAUC,KAAK,EAAE,CAAC,CAAC,CACpB;AACL,CAAC;AAED,MAAMF,kBAAkB,GAAIF,UAAU,IAAK;EACzC,IAAIA,UAAU,EAAE;IACd;IACAK,eAAe,CAACf,IAAI,CAACQ,KAAK,CAACC,eAAe,EAAE,CAACO,WAAW,CAACC,EAAE,CAACC,EAAE,CAAC;IAC/DnB,0BAA0B,CAAC,KAAK,CAAC;IACjC;IACAoB,SAAS,EAAE;EACb,CAAC,MAAM;IACL;IACAC,eAAe,EAAE;EACnB;AACF,CAAC;;AAEA;AACH;AACA;AACE,MAAMD,SAAS,GAAG,YAAuB;EAAA,IAAtBE,UAAU,uEAAG,IAAI;EAClCC,6BAA6B,CAAC,IAAI,CAAC;EACnCtB,IAAI,CAACC,MAAM,CAACsB,KAAK,CAACC,KAAK,CACpBC,IAAI,CAAC;IACJC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,wDAAwD;IAChEC,CAAC,EAAEP;EACL,CAAC,CAAC,CACDd,IAAI,CAAC,UAAUsB,QAAQ,EAAE;IACxBP,6BAA6B,CAAC,KAAK,CAAC;IACpCQ,0BAA0B,CAAC,IAAI,CAAC;IAChC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAAC;IACrCC,YAAY,CAACJ,GAAG,CAACP,KAAK,CAAC;EACzB,CAAC,CAAC;AACN,CAAC;;AAED;AACF;AACA;AACE,MAAMJ,eAAe,GAAIgB,KAAK,IAAK;EACjCpC,IAAI,CAACQ,KAAK,CAACC,eAAe,EAAE,CAAC4B,MAAM,EAAE;AACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}